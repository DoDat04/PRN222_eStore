@page "/login"
@using Microsoft.AspNetCore.Components.Authorization
@using eStore.DTO.MemberDTO.Response
@using eStore.DTO.MemberDTO.Request
@using Services;
@using System.Security.Claims;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject DataAccessObjects.IUnitOfWork UnitOfWork
@inject IConfiguration Configuration
<PageTitle>Login</PageTitle>

<EditForm method="post" Model="loginModel" OnValidSubmit="HandleLogin" FormName="LoginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputText @bind-Value="loginModel.Email" placeholder="Email" />
    <InputText @bind-Value="loginModel.Password" placeholder="Mật khẩu" type="password" />
    <button type="submit">Đăng nhập</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color:red">@errorMessage</p>
}
@if (!string.IsNullOrEmpty(successMessage))
{
    <p style="color:green">@successMessage</p>
}

@code {
    [SupplyParameterFromForm]
    private LoginRequest loginModel { get; set; } = new();
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;

    private async Task HandleLogin()
    {
        errorMessage = string.Empty;
        successMessage = string.Empty;
        var adminEmail = Configuration["AdminAccount:Email"];
        var adminPassword = Configuration["AdminAccount:Password"];

        var member = UnitOfWork.Members.GetAll().FirstOrDefault(m => m.Email == loginModel.Email && m.Password == loginModel.Password); ;

        if (member != null) 
        {
            var identity = new ClaimsIdentity(new[]
            {
            new Claim(ClaimTypes.Name, member.Email)
        }, "Custom authentication");

            var user = new ClaimsPrincipal(identity);

            await ((CustomAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(user);

            successMessage = "Đăng nhập thành công!";
            NavigationManager.NavigateTo("/Products");
        }
        if (loginModel.Email == adminEmail && loginModel.Password == adminPassword)
        {
            var identity = new ClaimsIdentity(new[]
            {
                new Claim(ClaimTypes.Name, adminEmail),
                new Claim(ClaimTypes.Role, "Admin")
            }, "Custom authentication");
            var user = new ClaimsPrincipal(identity);

            await ((CustomAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(user);

            successMessage = "Đăng nhập thành công!";
            NavigationManager.NavigateTo("/Members");
        }
    }
}
