@page "/products/delete"
@using Services.DTO
@using Microsoft.EntityFrameworkCore
@using BusinessObjects
@inject IDbContextFactory<BusinessObjects.EStoreContext> DbFactory
@inject NavigationManager NavigationManager
@inject Services.Define.IProductService ProductService

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Product</h2>
    <hr />
    @if (product is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Loại sản phẩm</dt>
            <dd class="col-sm-10">@product.CategoryName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Tên sản phẩm</dt>
            <dd class="col-sm-10">@product.ProductName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Khối lượng</dt>
            <dd class="col-sm-10">@product.Weight</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Giá</dt>
            <dd class="col-sm-10">@product.UnitPrice</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Tồn kho</dt>
            <dd class="col-sm-10">@product.UnitsInStock</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UnitsInStock</dt>
            <dd class="col-sm-10">@product.</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Discount</dt>
            <dd class="col-sm-10">@product.Discount</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Trạng Thái</dt>
            <dd class="col-sm-10">@(product.IsActive ? "Đang bán" : "Ngừng bán")</dd>
        </dl>
        <EditForm method="post" Model="product" OnValidSubmit="DeleteProduct" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(product is null)">Delete</button> |
            <a href="/products">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private ProductDto? product;

    [SupplyParameterFromQuery]
    private int ProductId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        product = await ProductService.GetByIdAsync(ProductId);
        if (product is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteProduct()
    {
        await ProductService.DeleteAsync(ProductId);
        NavigationManager.NavigateTo("/products");
    }
}